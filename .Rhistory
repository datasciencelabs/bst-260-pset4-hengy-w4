setwd("~/Desktop/0-Harvard/2025FALL/BST 260/HW/Pset4/bst-260-pset4-hengy-w4")
source("census_key.R")
url <- "https://api.census.gov/data/2021/pep/population"
pkgs <- c(
"httr2",     # HTTP requests and API interactions
"tidyverse", # Data manipulation, visualization, and analysis
"janitor",   # Data cleaning and formatting
"jsonlite",  # JSON data parsing
"lubridate"  # Date and time manipulation
)
to_install <- setdiff(pkgs, rownames(installed.packages()))
if (length(to_install)) {
install.packages(to_install, dependencies = TRUE)
}
invisible(lapply(pkgs, require, character.only = TRUE))
3. Make a request to the US Census API using the `request` object. Save the response to and object named `response`. Check the response status of your request and make sure it was successful. You can learn about _status codes_ [here](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes).
#| message: false
#| message: false
#| warning: false
library(httr2)
#request <-
3. Make a request to the US Census API using the `request` object. Save the response to and object named `response`. Check the response status of your request and make sure it was successful. You can learn about _status codes_ [here](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes).
request <- request(url) |>
req_url_query(
get = "POP_2020,POP_2021,NAME",
`for` = "state:*",
key = census_key
)
request
# Make the request and store the response
response <- req_perform(request)
# Check status code (200 = OK)
status <- resp_status(response)
if (status != 200) {
stop(paste("Request failed with status", status))
} else {
message("Success: status ", status)
}
# (Optional) sanity check on content type
resp_content_type(response)
resp_content_type(response)
population <- resp_body_json(response, simplifyVector = TRUE, simplifyDataFrame = FALSE, simplifyMatrix = TRUE)
#| message: false
#| warning: false
library(tidyverse)
library(janitor)
population <- population |>
as.data.frame(stringsAsFactors = FALSE) |>
janitor::row_to_names(row_number = 1) |>         # 1) first row -> header
janitor::clean_names() |>                        #    clean names -> pop_2020, name, state
as_tibble() |>
select(-state) |>                                # 2) remove state FIPS column
rename(state_name = name) |>                     # 3) rename NAME -> state_name
pivot_longer(                                    # 4) wide -> long
cols = starts_with("pop_"),
names_to = "year",
values_to = "population"
) |>
mutate(
year = as.integer(sub("^pop_", "", year)),     # 5) remove "pop_" prefix, to integer
population = as.numeric(population),           # 6) population to numeric
state = case_when(                             # 7) add state abbreviations
state_name == "District of Columbia" ~ "DC",
state_name == "Puerto Rico" ~ "PR",
TRUE ~ state.abb[match(state_name, state.name)]
)
) |>
relocate(state, state_name, year, population)    # nice column order
